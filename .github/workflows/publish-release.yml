name: Build and Publish Release

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up cache for Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Extract Version from POM
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn clean package

      - name: Extract Tag Name
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Check if Release Already Exists
        id: check_release
        run: |
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME")
          EXISTS=$(echo $RESPONSE | jq -r '.id')
          if [ "$EXISTS" != "null" ]; then
            echo "Release already exists for tag $TAG_NAME."
            UPLOAD_URL=$(echo $RESPONSE | jq -r .upload_url | sed 's/{?name,label}//')
            echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV
          else
            echo "Release does not exist for tag $TAG_NAME."
            echo "##[error]Release not found."
            exit 1
          fi

      - name: Upload JAR to Release
        if: env.UPLOAD_URL
        run: |
          curl -s -X POST "$UPLOAD_URL?name=telemetry-nucleus-emitter-${{ env.VERSION }}.jar" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/java-archive" \
            --data-binary @"${GITHUB_WORKSPACE}/target/telemetry-nucleus-emitter-${{ env.VERSION }}.jar"
